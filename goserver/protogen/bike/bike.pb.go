// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.3
// source: bike.proto

package bike

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 응답으로만 쓰일 메시지 타입이므로 optional 키워드 제외함
type Station struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StnGrpName string  `protobuf:"bytes,1,opt,name=stn_grp_name,json=stnGrpName,proto3" json:"stn_grp_name,omitempty"`
	StnId      string  `protobuf:"bytes,2,opt,name=stn_id,json=stnId,proto3" json:"stn_id,omitempty"`
	StnNum     string  `protobuf:"bytes,3,opt,name=stn_num,json=stnNum,proto3" json:"stn_num,omitempty"`
	StnName    string  `protobuf:"bytes,4,opt,name=stn_name,json=stnName,proto3" json:"stn_name,omitempty"`
	StnAddr_1  string  `protobuf:"bytes,5,opt,name=stn_addr_1,json=stnAddr1,proto3" json:"stn_addr_1,omitempty"`
	StnAddr_2  string  `protobuf:"bytes,6,opt,name=stn_addr_2,json=stnAddr2,proto3" json:"stn_addr_2,omitempty"`
	StnLat     float32 `protobuf:"fixed32,7,opt,name=stn_lat,json=stnLat,proto3" json:"stn_lat,omitempty"`
	StnLng     float32 `protobuf:"fixed32,8,opt,name=stn_lng,json=stnLng,proto3" json:"stn_lng,omitempty"`
	HoldNum    int32   `protobuf:"varint,9,opt,name=hold_num,json=holdNum,proto3" json:"hold_num,omitempty"`
}

func (x *Station) Reset() {
	*x = Station{}
	mi := &file_bike_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Station) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Station) ProtoMessage() {}

func (x *Station) ProtoReflect() protoreflect.Message {
	mi := &file_bike_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Station.ProtoReflect.Descriptor instead.
func (*Station) Descriptor() ([]byte, []int) {
	return file_bike_proto_rawDescGZIP(), []int{0}
}

func (x *Station) GetStnGrpName() string {
	if x != nil {
		return x.StnGrpName
	}
	return ""
}

func (x *Station) GetStnId() string {
	if x != nil {
		return x.StnId
	}
	return ""
}

func (x *Station) GetStnNum() string {
	if x != nil {
		return x.StnNum
	}
	return ""
}

func (x *Station) GetStnName() string {
	if x != nil {
		return x.StnName
	}
	return ""
}

func (x *Station) GetStnAddr_1() string {
	if x != nil {
		return x.StnAddr_1
	}
	return ""
}

func (x *Station) GetStnAddr_2() string {
	if x != nil {
		return x.StnAddr_2
	}
	return ""
}

func (x *Station) GetStnLat() float32 {
	if x != nil {
		return x.StnLat
	}
	return 0
}

func (x *Station) GetStnLng() float32 {
	if x != nil {
		return x.StnLng
	}
	return 0
}

func (x *Station) GetHoldNum() int32 {
	if x != nil {
		return x.HoldNum
	}
	return 0
}

type StationList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count    int32      `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Stations []*Station `protobuf:"bytes,2,rep,name=stations,proto3" json:"stations,omitempty"`
}

func (x *StationList) Reset() {
	*x = StationList{}
	mi := &file_bike_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StationList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StationList) ProtoMessage() {}

func (x *StationList) ProtoReflect() protoreflect.Message {
	mi := &file_bike_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StationList.ProtoReflect.Descriptor instead.
func (*StationList) Descriptor() ([]byte, []int) {
	return file_bike_proto_rawDescGZIP(), []int{1}
}

func (x *StationList) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *StationList) GetStations() []*Station {
	if x != nil {
		return x.Stations
	}
	return nil
}

type StationStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StnId         string `protobuf:"bytes,1,opt,name=stn_id,json=stnId,proto3" json:"stn_id,omitempty"`
	StnName       string `protobuf:"bytes,2,opt,name=stn_name,json=stnName,proto3" json:"stn_name,omitempty"`
	ParkedBikeCnt int32  `protobuf:"varint,3,opt,name=parked_bike_cnt,json=parkedBikeCnt,proto3" json:"parked_bike_cnt,omitempty"`
}

func (x *StationStatus) Reset() {
	*x = StationStatus{}
	mi := &file_bike_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StationStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StationStatus) ProtoMessage() {}

func (x *StationStatus) ProtoReflect() protoreflect.Message {
	mi := &file_bike_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StationStatus.ProtoReflect.Descriptor instead.
func (*StationStatus) Descriptor() ([]byte, []int) {
	return file_bike_proto_rawDescGZIP(), []int{2}
}

func (x *StationStatus) GetStnId() string {
	if x != nil {
		return x.StnId
	}
	return ""
}

func (x *StationStatus) GetStnName() string {
	if x != nil {
		return x.StnName
	}
	return ""
}

func (x *StationStatus) GetParkedBikeCnt() int32 {
	if x != nil {
		return x.ParkedBikeCnt
	}
	return 0
}

var File_bike_proto protoreflect.FileDescriptor

var file_bike_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x62, 0x69, 0x6b, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xff, 0x01, 0x0a, 0x07, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0c, 0x73, 0x74, 0x6e, 0x5f, 0x67, 0x72, 0x70,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x6e,
	0x47, 0x72, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x74, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x6e, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x73, 0x74, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x6e, 0x4e, 0x75, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6e, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x0a, 0x73, 0x74, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x31,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x31,
	0x12, 0x1c, 0x0a, 0x0a, 0x73, 0x74, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x32, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x32, 0x12, 0x17,
	0x0a, 0x07, 0x73, 0x74, 0x6e, 0x5f, 0x6c, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x06, 0x73, 0x74, 0x6e, 0x4c, 0x61, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x74, 0x6e, 0x5f, 0x6c,
	0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x73, 0x74, 0x6e, 0x4c, 0x6e, 0x67,
	0x12, 0x19, 0x0a, 0x08, 0x68, 0x6f, 0x6c, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x68, 0x6f, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x22, 0x49, 0x0a, 0x0b, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x24, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x08, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x69, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x74, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x6e, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x74, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x74, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x61, 0x72,
	0x6b, 0x65, 0x64, 0x5f, 0x62, 0x69, 0x6b, 0x65, 0x5f, 0x63, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x42, 0x69, 0x6b, 0x65, 0x43, 0x6e,
	0x74, 0x32, 0x88, 0x01, 0x0a, 0x04, 0x42, 0x69, 0x6b, 0x65, 0x12, 0x38, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0c, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x6c, 0x54,
	0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x30, 0x01, 0x42, 0x0f, 0x5a, 0x0d,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x65, 0x6e, 0x2f, 0x62, 0x69, 0x6b, 0x65, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bike_proto_rawDescOnce sync.Once
	file_bike_proto_rawDescData = file_bike_proto_rawDesc
)

func file_bike_proto_rawDescGZIP() []byte {
	file_bike_proto_rawDescOnce.Do(func() {
		file_bike_proto_rawDescData = protoimpl.X.CompressGZIP(file_bike_proto_rawDescData)
	})
	return file_bike_proto_rawDescData
}

var file_bike_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_bike_proto_goTypes = []any{
	(*Station)(nil),       // 0: Station
	(*StationList)(nil),   // 1: StationList
	(*StationStatus)(nil), // 2: StationStatus
	(*emptypb.Empty)(nil), // 3: google.protobuf.Empty
}
var file_bike_proto_depIdxs = []int32{
	0, // 0: StationList.stations:type_name -> Station
	3, // 1: Bike.GetStationList:input_type -> google.protobuf.Empty
	3, // 2: Bike.GetRealTimeStationStatus:input_type -> google.protobuf.Empty
	1, // 3: Bike.GetStationList:output_type -> StationList
	2, // 4: Bike.GetRealTimeStationStatus:output_type -> StationStatus
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_bike_proto_init() }
func file_bike_proto_init() {
	if File_bike_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bike_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bike_proto_goTypes,
		DependencyIndexes: file_bike_proto_depIdxs,
		MessageInfos:      file_bike_proto_msgTypes,
	}.Build()
	File_bike_proto = out.File
	file_bike_proto_rawDesc = nil
	file_bike_proto_goTypes = nil
	file_bike_proto_depIdxs = nil
}
